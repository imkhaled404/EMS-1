@model EMS.Models.EmploymentHistory

@{
    ViewBag.Title = "EditEmploymentHistory";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />

<section class="content" style="width: 800px;">
    <br />
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true)
            <div class="panel-group">
                <div class="panel panel-primary">
                    <div class="panel-heading">
                        <h4>Edit Employment History</h4>
                    </div>
                    <br />
                    <div class="form-group">
                        @Html.LabelFor(model => model.EmployeeId, new { @class = "control-label col-md-4" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.EmployeeId, ViewBag.EmployeeId as SelectList, "Select Employee Reg.No.", new { @class = "form-control", @id = "EmployeeId" })
                            @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <!----Start Show Area---->
                    <div class="form-group">
                        <label class="control-label col-md-4">Employee Name</label>
                        <div class="col-md-4">
                            <input type="text" readonly="readonly" class="form-control" id="Name" name="name" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-4">Employee Email</label>
                        <div class="col-md-4">
                            <input type="text" readonly="readonly" class="form-control" id="Email" name="Email" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-4">Employee NID</label>
                        <div class="col-md-4">
                            <input type="text" readonly="readonly" class="form-control" id="NID" name="NID" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-4">Employee Department</label>
                        <div class="col-md-4">
                            <input type="text" readonly="readonly" class="form-control" id="Department" name="Department" />
                        </div>
                    </div>
                    <!----End Show Area---->
                    <div class="form-group">
                        @Html.LabelFor(model => model.CompanyName, new { @class = "control-label col-md-4" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.CompanyName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CompanyLocation, new { @class = "control-label col-md-4" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.CompanyLocation, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CompanyLocation, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DepartmentId, new { @class = "control-label col-md-4" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.DepartmentId, ViewBag.DepartmentId as SelectList, "Select Department", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DesignationId, new { @class = "control-label col-md-4" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.DesignationId, ViewBag.DesignationId as SelectList, "Select Position", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.DesignationId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EmploymentFromDate, new { @class = "control-label col-md-4" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.EmploymentFromDate, new { @class = "form-control", @readonly = "false", @id = "FromDate" })
                            @Html.ValidationMessageFor(model => model.EmploymentFromDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsCurrentEmployee, new { @class = "control-label col-md-4" })
                        <div class="col-md-4">
                            @Html.EnumDropDownListFor(model => model.IsCurrentEmployee, "Select", new { @class = "form-control", @id = "IsCurrent" })
                            @Html.ValidationMessageFor(model => model.IsCurrentEmployee, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EmploymentToDate, new { @class = "control-label col-md-4" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.EmploymentToDate, new { @class = "form-control", @id = "ToDate", @readonly = "true" })
                            @Html.ValidationMessageFor(model => model.EmploymentToDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Responsibilities, new { @class = "control-label col-md-4" })
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.Responsibilities, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Responsibilities, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-4 col-md-10">
                            <input type="submit" value="Edit" class="btn btn-success" /> ||
                            @Html.ActionLink("Reset", "SaveEmploymentHistory", "EmploymentHistory", null, new { @class = "btn btn-warning" }) ||
                            @Html.ActionLink("View", "ViewEmploymentHistory", "EmploymentHistory", new { @class = "btn btn-primary" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</section>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(function () {
            $("#EmployeeId").change(function () {
                //  alert($(this).val() + " " + $(this).find("option:selected").html());
                var emId = $(this).val();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetEmployeeInfoById", "EmployeEducation")',
                    data: '{employeeId: "' + emId + '"}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        //alert(data.LastName);
                        $("#Name").val(data.name);
                        $("#Email").val(data.email);
                        $("#NID").val(data.nid);
                        $("#Department").val(data.department.DepartmentName);
                    },

                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve counties.');
                    }
                });

            });
        });
        //This Section End
        //Year picker start
        $('#year').datepicker({
            minViewMode: 2,
            format: 'yyyy'
        });

        //Date picker for From Date
        $('#FromDate').datepicker({
            todayBtn: "linked",
            keyboardNavigation: false,
            daysOfWeekHighlighted: "0,1,2,3,4,6",
            calendarWeeks: true,
            autoclose: true,
            todayHighlight: true
        });

        //Date picker for To Date
        $('#ToDate').datepicker({
            todayBtn: "linked",
            keyboardNavigation: false,
            daysOfWeekHighlighted: "0,1,2,3,4,6",
            calendarWeeks: true,
            autoclose: true,
            todayHighlight: true
        });
    </script>
    <script>

        //This section i have used for MaritalStatus control
        //If user select Married thn textbox will enable
        //either Disable textbox

        $(document).ready(function () {
            $('#IsCurrent').change(function () {
                if ($(this).val() == '2') {
                    $('#ToDate').each(function () {
                        $(this).prop('disabled', false);
                    });
                }
                else {
                    $('#ToDate').each(function () {
                        $(this).prop('disabled', true);
                        $(this).prop('checked', false);
                    });
                }
            });
        });

    </script>
}          